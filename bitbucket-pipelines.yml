image: node:16

pipelines:
  branches:
    master:
      - step:
          name: Build App
          caches:
            - node
            - docker
          services:
            - docker
          script:
            - npm ci
            - npm run build
          artifacts:
            - build/**

      - step:
          name: Build & Push Image
          image: atlassian/pipelines-awscli:1.21.7
          caches:
            - docker
          services:
            - docker
          script:
            - docker build -t $ECR_REPO:$BITBUCKET_BUILD_NUMBER .
            - eval $(aws ecr get-login --no-include-email --region eu-west-2)
            - docker push $ECR_REPO:$BITBUCKET_BUILD_NUMBER

      # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
      - step:
          name: "Deployment to Staging"
          deployment: staging
          script:
            - aws cloudformation deploy --template-file template.yaml --stack-name SpoonTastic-Staging --parameter-overrides AppImageUri=$ECR_REPO:$BITBUCKET_BUILD_NUMBER ScraperImageUri=$ECR_REPO:$BITBUCKET_BUILD_NUMBER Environment=staging ReleaseVersion=$BITBUCKET_BUILD_NUMBER EncryptionKey=$ENCRYPTION_KEY --capabilities "CAPABILITY_AUTO_EXPAND" "CAPABILITY_IAM"

      - step:
          name: "Deployment to Production"
          deployment: production
          trigger: "manual"
          script:
            - aws cloudformation deploy --template-file template.yaml --stack-name SpoonTastic-Production --parameter-overrides AppImageUri=$ECR_REPO:$BITBUCKET_BUILD_NUMBER ScraperImageUri=$ECR_REPO:$BITBUCKET_BUILD_NUMBER Environment=production ReleaseVersion=$BITBUCKET_BUILD_NUMBER EncryptionKey=$ENCRYPTION_KEY --capabilities "CAPABILITY_AUTO_EXPAND" "CAPABILITY_IAM"
